{"version":3,"sources":["components/AllMovies.js","components/MovieDirections.js","components/NominationDirections.js","components/SearchForm.js","components/AddNominations.js","components/RemoveNomination.js","App.js","reportWebVitals.js","index.js"],"names":["AllMovies","props","NominationComponent","nominationComponent","movies","map","movie","index","className","src","Poster","alt","Released","onClick","handleNominationsClick","MovieDirections","NominationDirections","SearchForm","type","value","onChange","e","setSearchValue","target","placeholder","AddNominations","xmlns","width","height","fill","class","viewBox","d","RemoveNominations","App","useState","setMovies","nominations","setNominations","searchValue","getMovieRequest","a","url","fetch","results","json","resultsJson","Search","useEffect","href","id","nominationList","filter","nomination","imdbID","RemoveNomination","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8eb93010.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AllMovies = (props) => {\r\n\tconst NominationComponent = props.nominationComponent\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.movies.map((movie, index) => (\r\n\t\t\t\t<div className='movie-options image-container image-container d-flex justify-content-start m-3'>\r\n\t\t\t\t\t<img src={movie.Poster} alt='movie'></img>\r\n\t\t\t\t\t<span className=\"release-year\">{movie.Released}</span>\r\n                    <div \r\n\t\t\t\t\tonClick={() => props.handleNominationsClick(movie)}\r\n\t\t\t\t\tclassName=\"overlay\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<NominationComponent/>\r\n                    </div>\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AllMovies;","import React from 'react';\r\n\r\nconst MovieDirections =  () => {\r\n    return (\r\n        <div className=\"movie-directions\">\r\n            <div className=\"large-number\">\r\n                <p>1</p>\r\n            </div>\r\n            <div className=\"movie-direction-text\">\r\n                <p>Search and Nominate 5 Films</p>\r\n            </div>\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\nexport default MovieDirections;","import React from 'react';\r\n\r\nconst NominationDirections =  () => {\r\n    return (\r\n        <div className=\"movie-directions\">\r\n            <div className=\"large-number\">\r\n                <p>2</p>\r\n            </div>\r\n            <div className=\"movie-direction-text\">\r\n                <p>Your Nominations:</p>\r\n            </div>\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\nexport default NominationDirections;","import React from 'react';\r\n\r\nconst SearchForm =  (props) => {\r\n    return (\r\n        <div className=\"search-form\">\r\n            <input type=\"text\" \r\n            className=\"search-input\"\r\n            value={props.value}\r\n            onChange= {(e) => props.setSearchValue(e.target.value)}\r\n            placeholder=\"Search for nomination\"/>\r\n\r\n        </div>\r\n    ) \r\n\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nconst AddNominations=  (props) => {\r\n    return (\r\n        <>\r\n            <span>\r\n            Nominate\r\n            </span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n            </svg>\r\n\r\n        </>\r\n    ) \r\n\r\n}\r\n\r\nexport default AddNominations;","import React from 'react';\r\n\r\nconst RemoveNominations =  (props) => {\r\n    return (\r\n        <>\r\n            <span>\r\n            Remove\r\n            </span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-circle\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n            </svg>\r\n     \r\n        </>\r\n    ) \r\n\r\n}\r\n\r\nexport default RemoveNominations;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport FirstPage from './components/FirstPage';\nimport AllMovies from './components/AllMovies';\nimport MovieDirections from './components/MovieDirections';\nimport NominationDirections from './components/NominationDirections';\nimport SearchForm from './components/SearchForm';\nimport AddNominations from './components/AddNominations';\nimport RemoveNomination from './components/RemoveNomination';\n\n\n\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [nominations, setNominations] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const getMovieRequest =  async (searchValue) => {\n    const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=f46fa659`;\n    const results = await fetch(url);\n    const resultsJson = await results.json();\n\n    if (resultsJson.Search) {\n      setMovies(resultsJson.Search)\n    }\n    \n    \n  };\n\n  useEffect (()=>{\n    getMovieRequest(searchValue);\n  }, [searchValue]);\n\n \n\n  const addNominatedMovie = (movie)=>{\n    const nominationList = [...nominations, movie];\n    setNominations(nominationList);\n  };\n\n  const removeNominatedMovie = (movie) => {\n    const nominationList = nominations.filter(\n      (nomination) => nomination.imdbID !== movie.imdbID\n      );\n\n      setNominations(nominationList);\n  };\n\n  // App Below\n  return <div className='container-fluid movie-app'>\n    {/* First Page */}\n    <div className=\"main-hero\">\n    <div className=\"first-page-contents\">\n            <h1>\n                The Shoppies Nominations\n            </h1>\n            <p>\n                We've branched out into movie award shows! Help us by nominating your faves.\n            </p>\n            <a href=\"#second\">\n            <button>\n                Start   \n            </button>\n            </a>\n        </div>\n    </div>\n\n    {/* Second Section  */}\n   <div id =\"second\" className=\"second-page\">\n      <MovieDirections/>\n      <div className=\"search-container\">\n      <SearchForm searchValue={searchValue} setSearchValue ={setSearchValue} />\n      </div>\n     \n      <div className=\"movie-container\">\n      <AllMovies movies ={movies} handleNominationsClick={addNominatedMovie} nominationComponent={AddNominations}/>\n    </div>\n    \n    </div>\n\n\n    {/* Nominations Page */}\n    <div className=\"third-page\">\n        <div className=\"nomination-header\">\n        <NominationDirections />\n        </div>\n        <div className=\"movie-container\">\n            <AllMovies movies ={nominations} handleNominationsClick={removeNominatedMovie} \n          nominationComponent={RemoveNomination}/>\n        </div>\n    </div>\n    \n  </div>;\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}